'''Welcome to the Lisp Games Wiki!'''

This wiki is the Official Community Portal (TM) of the Lisp Games community, devoted to creating games and other interactive multimedia constructions with the programmable programming language, [[Lisp]], in its various dialects: [[CommonLisp]], [[Scheme]], [[Clojure]], [[Parenscript]], [[Clojurescript]], [[EmacsLisp]], and others. These user-editable pages are for YOU: people sharing information, links, and discussions related to Lisp Games Development.

We've been updating the wiki to make it a more comprehensive resource for the Lispgames community. If you'd like to help out, please create an account and start adding ideas, questions, or links to your own or others' projects. Or join #lispgames on freenode to chat with someone. (See [http://www.mediawiki.org/wiki/Help:Formatting MediaWiki's formatting help page] for hints on editing. If you would prefer to use Emacs to edit the site, see [http://www.emacswiki.org/emacs/MediaWikiMode the EmacsWiki page on MediaWikiMode.])

== News for 2012-03-08 ==

* A call for [[2012 Spring Lisp Game Jam]] ideas!
* [[Blocky]] is now in preliminary beta release.

== New about these parts? == 
Sorry, these pages havent been written yet, but please check back soon.

[[What is Lisp?]]

[[Why use Lisp for games?]]

== Resources, by dialect ==

Lisp is a family of languages and each can have different libraries available. Check out what is particular to each dialect below.

[[CommonLisp]], [[Scheme]], [[Clojure]], [[Clojurescript]], [[EmacsLisp]], [[Parenscript]]

== Non Lisp Resources == 

Many challenges in game development are relevant to all languages. The links below are not about Lisp but may be very useful.

=== Functional Game Programming ===
* [http://www.haskell.org/haskellwiki/Yampa Functional Reactive Programming with Yampa (Haskell)]
* [http://www.altdevblogaday.com/2012/04/26/functional-programming-in-c/ John Carmack on functional programming in c++]
* [www.idt.mdh.se/utbildning/exjobb/files/TR0811.pdf] HaGPipe A DSL for programming the entire graphical pipeline (Haskell) (pdf)

=== Procedural Media Generation  ===
* Coming soon

=== Pages of Links ===
Some people have collected a fantastic swathe of links themselves. Rather than reproduce them all here go have a gander at their sites.
* [http://www-cs-students.stanford.edu/~amitp/gameprog.html Amit's Games Programming Information]

=== Code ===
Some code is so well written it can be read for inspiration for your own Lisp projects, if you want to see working implementations of game elements, see the following
* [http://www.ogre3d.org/ Ogre3D] Ogre is written in c++ and is incredibly clean and readable as well as being open source.

=== Help! ===
Although there isn't much lisp specific info in the sites below, many issues crop up in all languages so these are worth a gander.
* [http://gamedev.stackexchange.com/ Game Development Stack Exchange]

== Books ==
Unfortunately, unless you are some kind of digital bloodhound, you may struggle to piece together all the disparate information regarding game development online. Sometimes you just can't beat a good book.

* [http://www.amazon.com/Essential-Mathematics-Interactive-Applications-Edition/dp/0123742978 Essential Mathematics for Games and Interactive Applications]
* [http://www.amazon.com/Game-Engine-Architecture-Jason-Gregory/dp/1568814135 Game Engine Architecture]
* [http://www.amazon.com/Real-Time-Rendering-Third-Edition-Akenine-Moller/dp/1568814240 Real-Time Rendering]

== Open issues and projects == 

* [[EditorSupportForLisp]] 
* Identifying [[UsefulApplications]] for Lisp game developers.
* Building various [[GameCreationEnvironments]].
* [[CloMotion]] ideas and resources for motion control in Lisp gaming.
* Collecting [[Education]] resources. [[ObstaclesToLispNewcomers]] [[GoodFreeDocumentationElsewhere]]
* Identifying [[NeededDocumentation]].
* Planning the [[Next Lisp Game Dev Competition]].
* Reproducing and eventually fixing the [[Win64Crashes]] affecting some SBCL/SDL programs. 
* Removing the [[KittenOfDeath]] message and spurious terminal window from Win32/SBCL executables.
* Using [http://code.google.com/p/blackthorn-engine/wiki/BlackthornStarterPack Blackthorn Starter Pack].
* Automating build process and packaging of binaries/libs/assets for all available platforms. See also [[QuickLisp]], [[DistributingGames]]. [[MakingBinariesWithWine]]
* Engine and language-agnostic DAM (digital asset management) tools. See [[AssetManagement]].
* Working with others to add new platforms. [[PlatformSupport]]
* Writing [[Articles| Lisp Game Development Articles]].
* Collecting [[Lessons Learned|Lessons learned, Questions and Answers]].

=== Wiki Todo List ===

Here are some pages you could write or add to: 

* Page generally describing [[Lisp]], hopefully written in a manner [[AccessibleToNewcomers]].
* Collect more dialect-specific resources: [[CommonLisp]], [[Scheme]], [[Clojure]], [[EmacsLisp]], [[GOAL]], [[Parenscript]], [[Clojurescript]] 
* A permanent [[LispGamesArchive]] that people could donate things to, sort of like the Interactive Fiction Archive.
* [[ObstaclesToLispNewcomers]], [[CoolThingsWeShouldKnowAbout]]

=== Other resources ===

* Stock Art/Audio: 
** [http://lostgarden.com/labels/free%20game%20graphics.html LostGarden]
** [http://opengameart.org Open Game Art]
** [http://www.flyingyogi.com/fun/spritelib.html SpriteLib GPL]
** [http://openclipart.org/tags/game OpenClipArt]
** [http://www.freesound.org/ FreeSound.org]

== Games ==
Some games written using lisp-family languages.

* [http://dto.github.com/notebook/xong.html XONG]
* [http://sourceware.org/xconq/ Xconq] is a free strategy game that uses Lisp to define its war scenarios.
* [http://en.wikipedia.org/wiki/Abuse_%28video_game%29 Abuse] was a great action game that used Lisp for scripting its game logic.
* Jak and Daxter (Naughty Dog) was apparently partly written in a custom Lisp dialect called [http://en.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp GOAL]. See also this [http://c2.com/cgi/wiki?LispInJakAndDaxter C2 wiki page on LispInJakAndDaxter]
* [[Common Worm]]
* [[Farmageddon]]
* See more in [[:Category:Game]]

== Community ==

* IRC: chat.freenode.net #lispgames and #lisp
* [http://common-lisp.net/mailman/listinfo/lisp-game-dev mailing list]
* [http://twitter.com/lispgames lispgames on Twitter]
* [http://blocky.io/blog dto's Blocky blog]
* [http://lisp-qix.blogspot.com// WarWeasle's Qix Blog]